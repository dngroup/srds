enclave {

	from "sgx_tstdc.edl" import sgx_thread_wait_untrusted_event_ocall, sgx_thread_set_untrusted_event_ocall; 
	
    trusted {
        public void ecall_handlemessage(int csock, int type, [in,size=size] char *msg, int size);
        public void ecall_init(int type);
    };

    untrusted {
        [cdecl] void display_msg(int socket, [string,in] const char *msg);
        [cdecl] void display_TE(int socket, int l, int k);
        [cdecl] void emit_debug([string,in] const char *str);
        [cdecl] void emit_debug_int(int a);
        [cdecl] void ocall_startClient([out,size=4] int * csock, [in,string] char *address);
        [cdecl] void ocall_sendToClient(int sock, [in,size=size] char *request, int size, [out,size=1028] char * finalbuffer);
        [cdecl] void ocall_receiveFromClient(int sock, [out,size=1028] char * finalbuffer);
        [cdecl] void ocall_sendanswer(int csock, [in,size=size] char *msg, int size);
        [cdecl] void ocall_int_to_string(int a, [out, size=1024] char* chr);
        [cdecl] void ocall_string_to_int([in,size=size] const char* a, int size, [out,size=4] int * out);
        [cdecl] void ocall_getSocketIP(int sock, [out, size=30] char * clientip);
        [cdecl] void ocall_closesocket(int sock);
    };
};

